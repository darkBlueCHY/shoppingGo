<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CHY.shoppingGo.mapper.TbSpecificationMapper">
  <resultMap id="BaseResultMap" type="com.CHY.shoppingGo.po.TbSpecification">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="spec_name" jdbcType="VARCHAR" property="specName" />
  </resultMap>
  <resultMap id="Specification" type="com.CHY.shoppingGo.po.Specification" autoMapping="true">
    <id column="sid" property="specification.id"/>
    <result column="spec_name" property="specification.specName"/>		<!-- result其他属性 -->
    <collection property="specificationOptionList" javaType="java.util.List" ofType="com.CHY.shoppingGo.po.TbSpecificationOption" autoMapping="true">
      <id column="id" property="id"/>	<!--id为对象唯一标识,只有主表id相同的数据,MyBatis才会认为应该去重,并存于同一对象中-->
      <result column="option_name" property="optionName"/>	<!--开发中,所有表id都应该添加,以便以后续继承使用Collection标签-->
      <result column="spec_id" property="specId"/>
      <result column="orders" property="orders"/>
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, spec_name
  </sql>
  <select id="select2SpecificationList" resultType="java.util.Map">
    SELECT id,spec_name as text FROM tb_specification
  </select>
  <select id="findSpecificationByIds" resultMap="Specification" parameterType="java.lang.Long">
    SELECT s.id sid,s.spec_name,o.* FROM tb_specification AS s JOIN tb_specification_option AS o
    ON s.id=o.spec_id WHERE s.id IN
    <foreach collection="list" item="sid" open="(" separator="," close=")">
          #{sid}
        </foreach>
  </select>
  <select id="selectByExample" parameterType="com.CHY.shoppingGo.po.TbSpecificationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_specification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_specification
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_specification
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.CHY.shoppingGo.po.TbSpecificationExample">
    delete from tb_specification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.CHY.shoppingGo.po.TbSpecification">
    insert into tb_specification (id, spec_name)
    values (#{id,jdbcType=BIGINT}, #{specName,jdbcType=VARCHAR})
    <selectKey order="AFTER" resultType="long" keyProperty="id">
      SELECT LAST_INSERT_ID() as id
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.CHY.shoppingGo.po.TbSpecification">
    insert into tb_specification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="specName != null">
        spec_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="specName != null">
        #{specName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.CHY.shoppingGo.po.TbSpecificationExample" resultType="java.lang.Long">
    select count(*) from tb_specification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_specification
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.specName != null">
        spec_name = #{record.specName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_specification
    set id = #{record.id,jdbcType=BIGINT},
      spec_name = #{record.specName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.CHY.shoppingGo.po.TbSpecification">
    update tb_specification
    <set>
      <if test="specName != null">
        spec_name = #{specName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.CHY.shoppingGo.po.TbSpecification">
    update tb_specification
    set spec_name = #{specName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>